@page "/"
@using Data
@using Tech_Accounting.Models;
@inject TechRepository techRepository

<div class="container-fluid">
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Number</th>
                <th>Tech description</th>

            </tr>
        </thead>
        <tbody>

            @if (AllObj != null)
            {
                @foreach (var techs in AllObj)
                {
                    <tr>
                        <td>@techs.TechDate</td>
                        <td>@techs.TechNumber</td>
                        <td>@techs.TechDescription</td>
                        <td>
                            <a class="nav-link" href="update/@techs.Id">
                                <span class="oi oi-pencil" aria-hidden="true">Edit</span>
                            </a>
                            <a class="nav-link" href="">
                                <span class="oi oi-trash" aria-hidden="true">Delete</span>
                            </a>
                        </td>
                    </tr>
                }
            }
            <tr>
                <th><input type="text" class="" @bind="obj.TechDate" @onclick="@(() => obj.TechDate="")" /></th>
                <th><input type="text" class="" @bind="obj.TechNumber" @onclick="@(() => obj.TechNumber=null)" /></th>
                <th><input type="text" class="" @bind="obj.TechDescription" @onclick="@(() => obj.TechDescription="")" /></th>
                <th><input type="button" class="" @onclick="CreateEmployee" value="Save" /></th>
            </tr>


        </tbody>

        <tbody>
        </tbody>
    </table>
</div>
@code {
    List<Techprop> AllObj;
    protected override async Task OnInitializedAsync()
    {
        AllObj = await Task.Run(() => techRepository.GetAllTechPropsAsync());
    }
    Techprop obj = new Techprop();
    protected async void CreateEmployee()
    {
        await techRepository.InsertTechPropsAsync(obj);

    }

}